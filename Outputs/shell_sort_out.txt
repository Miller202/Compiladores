   1 Funct Void shellsort(Int array[ ], Int n) Begin
 [0001,0001] (0004,         PR_FUNCTION) {Funct}
 [0001,0002] (0006,             PR_VOID) {Void}
 [0001,0003] (0001,                  ID) {shellsort}
 [0001,0004] (0048,              AB_PAR) {(}
 [0001,0005] (0015,              PR_INT) {Int}
 [0001,0006] (0001,                  ID) {array}
 [0001,0007] (0050,              AB_COL) {[}
 [0001,0008] (0051,             FEC_COL) {]}
 [0001,0009] (0053,                 SEP) {,}
 [0001,0010] (0015,              PR_INT) {Int}
 [0001,0011] (0001,                  ID) {n}
 [0001,0012] (0049,             FEC_PAR) {)}
 [0001,0013] (0002,            PR_BEGIN) {Begin}
   2    Int h = 1, c, j;
 [0002,0001] (0015,              PR_INT) {Int}
 [0002,0002] (0001,                  ID) {h}
 [0002,0003] (0030,              OP_ATR) {=}
 [0002,0004] (0027,              CT_INT) {1}
 [0002,0005] (0053,                 SEP) {,}
 [0002,0006] (0001,                  ID) {c}
 [0002,0007] (0053,                 SEP) {,}
 [0002,0008] (0001,                  ID) {j}
 [0002,0009] (0052,            TERMINAL) {;}
   3
   4         While (h < n) Begin
 [0004,0001] (0013,            PR_WHILE) {While}
 [0004,0002] (0048,              AB_PAR) {(}
 [0004,0003] (0001,                  ID) {h}
 [0004,0004] (0040,             OP_LESS) {<}
 [0004,0005] (0001,                  ID) {n}
 [0004,0006] (0049,             FEC_PAR) {)}
 [0004,0007] (0002,            PR_BEGIN) {Begin}
   5            h = h * 3 + 1;
 [0005,0001] (0001,                  ID) {h}
 [0005,0002] (0030,              OP_ATR) {=}
 [0005,0003] (0001,                  ID) {h}
 [0005,0004] (0036,             OP_MULT) {*}
 [0005,0005] (0027,              CT_INT) {3}
 [0005,0006] (0034,               OP_AD) {+}
 [0005,0007] (0027,              CT_INT) {1}
 [0005,0008] (0052,            TERMINAL) {;}
   6    End
 [0006,0001] (0003,              PR_END) {End}
   7
   8    h = h / 3;
 [0008,0001] (0001,                  ID) {h}
 [0008,0002] (0030,              OP_ATR) {=}
 [0008,0003] (0001,                  ID) {h}
 [0008,0004] (0037,              OP_DIV) {/}
 [0008,0005] (0027,              CT_INT) {3}
 [0008,0006] (0052,            TERMINAL) {;}
   9
  10    While(h > 0) Begin
 [0010,0001] (0013,            PR_WHILE) {While}
 [0010,0002] (0048,              AB_PAR) {(}
 [0010,0003] (0001,                  ID) {h}
 [0010,0004] (0039,          OP_GREATER) {>}
 [0010,0005] (0027,              CT_INT) {0}
 [0010,0006] (0049,             FEC_PAR) {)}
 [0010,0007] (0002,            PR_BEGIN) {Begin}
  11            For (Int i = h, 1, n) Begin
 [0011,0001] (0014,              PR_FOR) {For}
 [0011,0002] (0048,              AB_PAR) {(}
 [0011,0003] (0015,              PR_INT) {Int}
 [0011,0004] (0001,                  ID) {i}
 [0011,0005] (0030,              OP_ATR) {=}
 [0011,0006] (0001,                  ID) {h}
 [0011,0007] (0053,                 SEP) {,}
 [0011,0008] (0027,              CT_INT) {1}
 [0011,0009] (0053,                 SEP) {,}
 [0011,0010] (0001,                  ID) {n}
 [0011,0011] (0049,             FEC_PAR) {)}
 [0011,0012] (0002,            PR_BEGIN) {Begin}
  12                     c = array[i];
 [0012,0001] (0001,                  ID) {c}
 [0012,0002] (0030,              OP_ATR) {=}
 [0012,0003] (0001,                  ID) {array}
 [0012,0004] (0050,              AB_COL) {[}
 [0012,0005] (0001,                  ID) {i}
 [0012,0006] (0051,             FEC_COL) {]}
 [0012,0007] (0052,            TERMINAL) {;}
  13                     j = i;
 [0013,0001] (0001,                  ID) {j}
 [0013,0002] (0030,              OP_ATR) {=}
 [0013,0003] (0001,                  ID) {i}
 [0013,0004] (0052,            TERMINAL) {;}
  14                     While(j >= h And array[j - h] > c) Begin
 [0014,0001] (0013,            PR_WHILE) {While}
 [0014,0002] (0048,              AB_PAR) {(}
 [0014,0003] (0001,                  ID) {j}
 [0014,0004] (0041,         OP_GREATERT) {>=}
 [0014,0005] (0001,                  ID) {h}
 [0014,0006] (0009,              PR_AND) {And}
 [0014,0007] (0001,                  ID) {array}
 [0014,0008] (0050,              AB_COL) {[}
 [0014,0009] (0001,                  ID) {j}
 [0014,0010] (0035,              OP_SUB) {-}
 [0014,0011] (0001,                  ID) {h}
 [0014,0012] (0051,             FEC_COL) {]}
 [0014,0013] (0039,          OP_GREATER) {>}
 [0014,0014] (0001,                  ID) {c}
 [0014,0015] (0049,             FEC_PAR) {)}
 [0014,0016] (0002,            PR_BEGIN) {Begin}
  15                             array[j] = array[j - h];
 [0015,0001] (0001,                  ID) {array}
 [0015,0002] (0050,              AB_COL) {[}
 [0015,0003] (0001,                  ID) {j}
 [0015,0004] (0051,             FEC_COL) {]}
 [0015,0005] (0030,              OP_ATR) {=}
 [0015,0006] (0001,                  ID) {array}
 [0015,0007] (0050,              AB_COL) {[}
 [0015,0008] (0001,                  ID) {j}
 [0015,0009] (0035,              OP_SUB) {-}
 [0015,0010] (0001,                  ID) {h}
 [0015,0011] (0051,             FEC_COL) {]}
 [0015,0012] (0052,            TERMINAL) {;}
  16                             j = j - h;
 [0016,0001] (0001,                  ID) {j}
 [0016,0002] (0030,              OP_ATR) {=}
 [0016,0003] (0001,                  ID) {j}
 [0016,0004] (0035,              OP_SUB) {-}
 [0016,0005] (0001,                  ID) {h}
 [0016,0006] (0052,            TERMINAL) {;}
  17                     End
 [0017,0001] (0003,              PR_END) {End}
  18                     array[j] = c;
 [0018,0001] (0001,                  ID) {array}
 [0018,0002] (0050,              AB_COL) {[}
 [0018,0003] (0001,                  ID) {j}
 [0018,0004] (0051,             FEC_COL) {]}
 [0018,0005] (0030,              OP_ATR) {=}
 [0018,0006] (0001,                  ID) {c}
 [0018,0007] (0052,            TERMINAL) {;}
  19            End
 [0019,0001] (0003,              PR_END) {End}
  20            h = h / 2;
 [0020,0001] (0001,                  ID) {h}
 [0020,0002] (0030,              OP_ATR) {=}
 [0020,0003] (0001,                  ID) {h}
 [0020,0004] (0037,              OP_DIV) {/}
 [0020,0005] (0027,              CT_INT) {2}
 [0020,0006] (0052,            TERMINAL) {;}
  21    End
 [0021,0001] (0003,              PR_END) {End}
  22    Return;
 [0022,0001] (0008,           PR_RETURN) {Return}
 [0022,0002] (0052,            TERMINAL) {;}
  23 End
 [0023,0001] (0003,              PR_END) {End}
  24
  25 Funct Int Main ( ) Begin
 [0025,0001] (0004,         PR_FUNCTION) {Funct}
 [0025,0002] (0015,              PR_INT) {Int}
 [0025,0003] (0005,             PR_MAIN) {Main}
 [0025,0004] (0048,              AB_PAR) {(}
 [0025,0005] (0049,             FEC_PAR) {)}
 [0025,0006] (0002,            PR_BEGIN) {Begin}
  26    Int n, v;
 [0026,0001] (0015,              PR_INT) {Int}
 [0026,0002] (0001,                  ID) {n}
 [0026,0003] (0053,                 SEP) {,}
 [0026,0004] (0001,                  ID) {v}
 [0026,0005] (0052,            TERMINAL) {;}
  27    Output('Digite o tamanho do array: ');
 [0027,0001] (0021,           PR_OUTPUT) {Output}
 [0027,0002] (0048,              AB_PAR) {(}
 [0027,0003] (0029,              CT_STR) {'Digite o tamanho do array: '}
 [0027,0004] (0049,             FEC_PAR) {)}
 [0027,0005] (0052,            TERMINAL) {;}
  28    Input(n);
 [0028,0001] (0020,            PR_INPUT) {Input}
 [0028,0002] (0048,              AB_PAR) {(}
 [0028,0003] (0001,                  ID) {n}
 [0028,0004] (0049,             FEC_PAR) {)}
 [0028,0005] (0052,            TERMINAL) {;}
  29    Int array[n];
 [0029,0001] (0015,              PR_INT) {Int}
 [0029,0002] (0001,                  ID) {array}
 [0029,0003] (0050,              AB_COL) {[}
 [0029,0004] (0001,                  ID) {n}
 [0029,0005] (0051,             FEC_COL) {]}
 [0029,0006] (0052,            TERMINAL) {;}
  30
  31    Output('Digite os valores para serem ordenados: ');
 [0031,0001] (0021,           PR_OUTPUT) {Output}
 [0031,0002] (0048,              AB_PAR) {(}
 [0031,0003] (0029,              CT_STR) {'Digite os valores para serem ordenados: '}
 [0031,0004] (0049,             FEC_PAR) {)}
 [0031,0005] (0052,            TERMINAL) {;}
  32         For (Int i = 0, 1, n) Begin
 [0032,0001] (0014,              PR_FOR) {For}
 [0032,0002] (0048,              AB_PAR) {(}
 [0032,0003] (0015,              PR_INT) {Int}
 [0032,0004] (0001,                  ID) {i}
 [0032,0005] (0030,              OP_ATR) {=}
 [0032,0006] (0027,              CT_INT) {0}
 [0032,0007] (0053,                 SEP) {,}
 [0032,0008] (0027,              CT_INT) {1}
 [0032,0009] (0053,                 SEP) {,}
 [0032,0010] (0001,                  ID) {n}
 [0032,0011] (0049,             FEC_PAR) {)}
 [0032,0012] (0002,            PR_BEGIN) {Begin}
  33            Input(array[i]);
 [0033,0001] (0020,            PR_INPUT) {Input}
 [0033,0002] (0048,              AB_PAR) {(}
 [0033,0003] (0001,                  ID) {array}
 [0033,0004] (0050,              AB_COL) {[}
 [0033,0005] (0001,                  ID) {i}
 [0033,0006] (0051,             FEC_COL) {]}
 [0033,0007] (0049,             FEC_PAR) {)}
 [0033,0008] (0052,            TERMINAL) {;}
  34         End
 [0034,0001] (0003,              PR_END) {End}
  35         Output('Valores adicionados: ');
 [0035,0001] (0021,           PR_OUTPUT) {Output}
 [0035,0002] (0048,              AB_PAR) {(}
 [0035,0003] (0029,              CT_STR) {'Valores adicionados: '}
 [0035,0004] (0049,             FEC_PAR) {)}
 [0035,0005] (0052,            TERMINAL) {;}
  36         For (Int i = 0, 1, n) Begin
 [0036,0001] (0014,              PR_FOR) {For}
 [0036,0002] (0048,              AB_PAR) {(}
 [0036,0003] (0015,              PR_INT) {Int}
 [0036,0004] (0001,                  ID) {i}
 [0036,0005] (0030,              OP_ATR) {=}
 [0036,0006] (0027,              CT_INT) {0}
 [0036,0007] (0053,                 SEP) {,}
 [0036,0008] (0027,              CT_INT) {1}
 [0036,0009] (0053,                 SEP) {,}
 [0036,0010] (0001,                  ID) {n}
 [0036,0011] (0049,             FEC_PAR) {)}
 [0036,0012] (0002,            PR_BEGIN) {Begin}
  37             v = array[i];
 [0037,0001] (0001,                  ID) {v}
 [0037,0002] (0030,              OP_ATR) {=}
 [0037,0003] (0001,                  ID) {array}
 [0037,0004] (0050,              AB_COL) {[}
 [0037,0005] (0001,                  ID) {i}
 [0037,0006] (0051,             FEC_COL) {]}
 [0037,0007] (0052,            TERMINAL) {;}
  38        Outputln(v);
 [0038,0001] (0022,         PR_OUTPUTLN) {Outputln}
 [0038,0002] (0048,              AB_PAR) {(}
 [0038,0003] (0001,                  ID) {v}
 [0038,0004] (0049,             FEC_PAR) {)}
 [0038,0005] (0052,            TERMINAL) {;}
  39         End
 [0039,0001] (0003,              PR_END) {End}
  40    shellsort(array[n], n);
 [0040,0001] (0001,                  ID) {shellsort}
 [0040,0002] (0048,              AB_PAR) {(}
 [0040,0003] (0001,                  ID) {array}
 [0040,0004] (0050,              AB_COL) {[}
 [0040,0005] (0001,                  ID) {n}
 [0040,0006] (0051,             FEC_COL) {]}
 [0040,0007] (0053,                 SEP) {,}
 [0040,0008] (0001,                  ID) {n}
 [0040,0009] (0049,             FEC_PAR) {)}
 [0040,0010] (0052,            TERMINAL) {;}
  41
  42    Output('Valores ordenados: ');
 [0042,0001] (0021,           PR_OUTPUT) {Output}
 [0042,0002] (0048,              AB_PAR) {(}
 [0042,0003] (0029,              CT_STR) {'Valores ordenados: '}
 [0042,0004] (0049,             FEC_PAR) {)}
 [0042,0005] (0052,            TERMINAL) {;}
  43         For (Int i = 0, 1, n) Begin
 [0043,0001] (0014,              PR_FOR) {For}
 [0043,0002] (0048,              AB_PAR) {(}
 [0043,0003] (0015,              PR_INT) {Int}
 [0043,0004] (0001,                  ID) {i}
 [0043,0005] (0030,              OP_ATR) {=}
 [0043,0006] (0027,              CT_INT) {0}
 [0043,0007] (0053,                 SEP) {,}
 [0043,0008] (0027,              CT_INT) {1}
 [0043,0009] (0053,                 SEP) {,}
 [0043,0010] (0001,                  ID) {n}
 [0043,0011] (0049,             FEC_PAR) {)}
 [0043,0012] (0002,            PR_BEGIN) {Begin}
  44             v = array[i];
 [0044,0001] (0001,                  ID) {v}
 [0044,0002] (0030,              OP_ATR) {=}
 [0044,0003] (0001,                  ID) {array}
 [0044,0004] (0050,              AB_COL) {[}
 [0044,0005] (0001,                  ID) {i}
 [0044,0006] (0051,             FEC_COL) {]}
 [0044,0007] (0052,            TERMINAL) {;}
  45        Outputln(v);
 [0045,0001] (0022,         PR_OUTPUTLN) {Outputln}
 [0045,0002] (0048,              AB_PAR) {(}
 [0045,0003] (0001,                  ID) {v}
 [0045,0004] (0049,             FEC_PAR) {)}
 [0045,0005] (0052,            TERMINAL) {;}
  46         End
 [0046,0001] (0003,              PR_END) {End}
  47
  48    Return;
 [0048,0001] (0008,           PR_RETURN) {Return}
 [0048,0002] (0052,            TERMINAL) {;}
  49 End
 [0049,0001] (0003,              PR_END) {End}
  50
 [0050,0000] (0000,                 EOF) {EOF}
